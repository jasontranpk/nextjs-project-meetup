{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/xmountain/repos/nextjs-project-meetup/pages/[meetupId]/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      img: \"https://www.planetware.com/photos-large/F/eiffel-tower.jpg\",\n      title: \"A first meetup\",\n      address: \"some locations\",\n      description: \"this is the description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://admin:hCvKABnN7EJ9156H@cluster0.acl7876.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const result = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: result.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const client = MongoClient.connect('mongodb+srv://admin:hCvKABnN7EJ9156H@cluster0.acl7876.mongodb.net/meetups?retryWrites=true&w=majority');\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      MeetupData: {\n        id: 'm1',\n        img: 'https://www.planetware.com/photos-large/F/eiffel-tower.jpg',\n        title: 'A first meetup',\n        address: 'some locations',\n        description: 'this is the description'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/xmountain/repos/nextjs-project-meetup/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","getStaticPaths","client","connect","db","meetupsCollection","collection","result","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","MeetupData","id","img","title","address","description"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,sBACC;AAAA,2BACC,QAAC,YAAD;AACC,MAAA,GAAG,EAAC,4DADL;AAEC,MAAA,KAAK,EAAC,gBAFP;AAGC,MAAA,OAAO,EAAC,gBAHT;AAIC,MAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAUA;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACpB,uGADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAArB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAYC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAX;AAFD,GAAP;AAMA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMlB,MAAM,GAAGL,WAAW,CAACM,OAAZ,CACd,uGADc,CAAf;AAGA,QAAMc,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACNjB,IAAAA,KAAK,EAAE;AACNuB,MAAAA,UAAU,EAAE;AACXC,QAAAA,EAAE,EAAE,IADO;AAEXC,QAAAA,GAAG,EAAE,4DAFM;AAGXC,QAAAA,KAAK,EAAE,gBAHI;AAIXC,QAAAA,OAAO,EAAE,gBAJE;AAKXC,QAAAA,WAAW,EAAE;AALF;AADN;AADD,GAAP;AAWA;AAED,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n\treturn (\n\t\t<>\n\t\t\t<MeetupDetail\n\t\t\t\timg='https://www.planetware.com/photos-large/F/eiffel-tower.jpg'\n\t\t\t\ttitle='A first meetup'\n\t\t\t\taddress='some locations'\n\t\t\t\tdescription='this is the description'\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://admin:hCvKABnN7EJ9156H@cluster0.acl7876.mongodb.net/meetups?retryWrites=true&w=majority'\n\t);\n\tconst db = client.db();\n\tconst meetupsCollection = db.collection('meetups');\n\tconst result = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n\tclient.close();\n\treturn {\n\t\tfallback: false,\n\t\tpaths: result.map((meetup) => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\tconst client = MongoClient.connect(\n\t\t'mongodb+srv://admin:hCvKABnN7EJ9156H@cluster0.acl7876.mongodb.net/meetups?retryWrites=true&w=majority'\n\t);\n\tconst meetupId = context.params.meetupId;\n\tconsole.log(meetupId);\n\treturn {\n\t\tprops: {\n\t\t\tMeetupData: {\n\t\t\t\tid: 'm1',\n\t\t\t\timg: 'https://www.planetware.com/photos-large/F/eiffel-tower.jpg',\n\t\t\t\ttitle: 'A first meetup',\n\t\t\t\taddress: 'some locations',\n\t\t\t\tdescription: 'this is the description',\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}